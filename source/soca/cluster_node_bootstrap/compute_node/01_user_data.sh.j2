#!/bin/bash -x

# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

# As UserData length is limited in size 16KB. Edit setup.sh.j2 instead.

# Load common logging feature
{% include "templates/linux/common/log.sh.j2" %}

# Patch DNS Resolver when using Debian based distributions
{% include "templates/linux/dns_resolver.sh.j2" %}

# Configure HTTP proxy if any
{% include "templates/linux/http_proxy.sh.j2" %}

# Load Custom Wrappers
{% include "templates/linux/common/file_download.sh.j2" %}
{% include "templates/linux/common/wrapper_awscli.sh.j2" %}
{% include "templates/linux/common/wrapper_imds.sh.j2" %}

# Load packages management functions
{% include "templates/linux/system_packages/packages_management.sh.j2" %}

# Install AWS Systems Manager agent
{% include "templates/linux/aws_ssm_agent.sh.j2" %}

# Install awscli
{% include "templates/linux/awscli.sh.j2" %}

# Remove any previous references of SOCA to the environment file (if any)
cp /etc/environment /etc/environment.original.$(date +%s)
sed -i '/SOCA_/d' /etc/environment

# Note: Log generated prior to filesystems mount will be automatically copied over the POST_FILESYSTEM_MOUNT_LOGS_FOLDER post filesystems mount for simple troubleshooting
PRE_FILESYSTEM_MOUNT_LOGS_FOLDER="/root/soca_bootstrap_$(instance_id)/logs"
POST_FILESYSTEM_MOUNT_LOGS_FOLDER="{{ context.get("/job/BootstrapPath") }}/$(hostname -s)"
SOCA_BOOTSTRAP_ASSETS_FOLDER="/root/soca_bootstrap_$(instance_id)"

mkdir -p ${PRE_FILESYSTEM_MOUNT_LOGS_FOLDER}

log_info "EC2 UserData script is being executed, checks logs on /var/log/cloud-init*" >> "${PRE_FILESYSTEM_MOUNT_LOGS_FOLDER}/01_user_data.sh.log" 2>&1

# Retrieve Boostrap sequence from S3
S3_BUCKET_REGION=$(curl -s --head {{ context.get("/configuration/S3Bucket") }}.s3.{{ context.get("/configuration/Region") }}.amazonaws.com.cn | grep bucket-region | awk '{print $2}' | tr -d '\r\n')

log_info "Downloading SOCA_BOOTSTRAP_SEQUENCE from: {{ context.get("/job/BootstrapScriptsS3Location") }}"
aws_cli s3 --region ${S3_BUCKET_REGION} sync {{ context.get("/job/BootstrapScriptsS3Location") }} ${SOCA_BOOTSTRAP_ASSETS_FOLDER}

# Install Required System library/packages
/bin/bash "${SOCA_BOOTSTRAP_ASSETS_FOLDER}/install_required_packages.sh" >> "${PRE_FILESYSTEM_MOUNT_LOGS_FOLDER}/install_required_packages.sh.log" 2>&1

# Mount Filesystems
/bin/bash "${SOCA_BOOTSTRAP_ASSETS_FOLDER}/filesystems_automount.sh" >> "${PRE_FILESYSTEM_MOUNT_LOGS_FOLDER}/filesystems_mount.log" 2>&1

# Create new log path in shared partition & apply permissions
mkdir -p ${POST_FILESYSTEM_MOUNT_LOGS_FOLDER}
chmod 600 ${POST_FILESYSTEM_MOUNT_LOGS_FOLDER}

# Copy the User Data log into the shared filesystem to simplify troubleshooting
cp /var/log/messages ${POST_FILESYSTEM_MOUNT_LOGS_FOLDER} || echo "/var/log/messages found on this system"
cp /var/log/cloud-init* ${POST_FILESYSTEM_MOUNT_LOGS_FOLDER} || echo "/var/log/cloud-init not found on this system"
cp "${PRE_FILESYSTEM_MOUNT_LOGS_FOLDER}/*" ${POST_FILESYSTEM_MOUNT_LOGS_FOLDER}

echo "{{ context.get("/job/BootstrapScriptsS3Location") }}" >> "${POST_FILESYSTEM_MOUNT_LOGS_FOLDER}/bootstrap_s3_location.log"

/bin/bash "${SOCA_BOOTSTRAP_ASSETS_FOLDER}/02_setup.sh" >> "${POST_FILESYSTEM_MOUNT_LOGS_FOLDER}/02_setup.log" 2>&1
