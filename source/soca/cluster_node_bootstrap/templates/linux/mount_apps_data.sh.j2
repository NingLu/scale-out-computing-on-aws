# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

# Begin: Prepare /apps and /data Filesystems
{% set use_efs = context.get("/configuration/FileSystemDataProvider") == "efs" or context.get("/configuration/FileSystemAppsProvider") == "efs" %}
{% set use_fsx_lustre = context.get("/configuration/FileSystemDataProvider") == "fsx_lustre" or context.get("/configuration/FileSystemAppsProvider") == "fsx_lustre" %}
{% set use_fsx_ontap = context.get("/configuration/FileSystemDataProvider") == "fsx_ontap" or context.get("/configuration/FileSystemAppsProvider") == "fsx_ontap" %}
{% set use_fsx_openzfs = context.get("/configuration/FileSystemDataProvider") == "fsx_openzfs" or context.get("/configuration/FileSystemAppsProvider") == "fsx_openzfs" %}

{% if use_efs %}
  {% include "templates/linux/shared_storage/mount_efs.sh.j2" %}
{% endif %}

{% if use_fsx_lustre %}
  {% include "templates/linux/shared_storage/mount_fsx_lustre.sh.j2" %}
{% endif %}

{% if use_fsx_ontap %}
  {% include "templates/linux/shared_storage/mount_fsx_ontap.sh.j2" %}
{% endif %}

{% if use_fsx_openzfs %}
  {% include "templates/linux/shared_storage/mount_fsx_openzfs.sh.j2" %}
{% endif %}

{% set supported_storage_providers = ["efs", "fsx_openzfs", "fsx_lustre", "fsx_ontap"] %}
{% for provider in ["/configuration/FileSystemDataProvider", "/configuration/FileSystemAppsProvider"] %}
  {% if context.get(provider) not in supported_storage_providers %}
    exit_fail "Unknown {{ provider.split('/')[-1] }} {{ context.get(provider) }}: FileSystem Supported: efs, fsx_openzfs, fsx_lustre, fsx_ontap"
  {% endif %}
{% endfor %}

# /apps
{% if context.get("/configuration/FileSystemAppsProvider") == "efs" %}
  mount_efs "{{ context.get("/configuration/FileSystemApps") }}:/" "/apps"
{% elif context.get("/configuration/FileSystemAppsProvider") == "fsx_openzfs" %}
  mount_fsx_openzfs "{{ context.get("/configuration/FileSystemApps") }}:/fsx" "/apps"
{% elif context.get("/configuration/FileSystemAppsProvider") == "fsx_lustre" %}
  mount_fsx_lustre "{{ context.get("/configuration/FileSystemApps") }}" "/apps"
{% elif context.get("/configuration/FileSystemAppsProvider") == "fsx_ontap" %}
  mount_fsx_ontap "{{ context.get("/configuration/FileSystemApps") }}:/vol1" "/apps"
{% endif %}

# /data
{% if context.get("/configuration/FileSystemDataProvider") == "efs" %}
  mount_efs "{{ context.get("/configuration/FileSystemData") }}:/" "/data"
{% elif context.get("/configuration/FileSystemDataProvider") == "fsx_openzfs" %}
  mount_fsx_openzfs "{{ context.get("/configuration/FileSystemData") }}:/fsx" "/data"
{% elif context.get("/configuration/FileSystemDataProvider") == "fsx_lustre" %}
  mount_fsx_lustre "{{ context.get("/configuration/FileSystemData") }}" "/data"
{% elif context.get("/configuration/FileSystemDataProvider") == "fsx_ontap" %}
  mount_fsx_ontap "{{ context.get("/configuration/FileSystemData") }}:/vol1" "/data"
{% endif %}

# End: Prepare /apps and /data Filesystems