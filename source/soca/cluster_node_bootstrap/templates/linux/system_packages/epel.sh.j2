# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

# Begin: Install EPEL repository
{% if context.get("/configuration/BaseOS") in ("centos7", "centos8", "rhel7", "rhel8", "rhel9", "rocky8", "rocky9", "amazonlinux2", "amazonlinux2023") %}
function install_epel () {
    # Note: CRB / Powertool repo for RHEL8+ based distro are managed via system_packages.sh.j2
    # install_epel is also called at the beginning of system_packages.sh.j2

    pushd "${SOCA_BOOTSTRAP_ASSETS_FOLDER}"
    local EPEL_URL
    local EPEL_RPM

    if ls -ltr /etc/yum.repos.d/ | grep epel; then
      log_info "EPEL repo are already installed on this machine"
    else
      log_info "EPEL repo not found, installing it ..."

      {% if context.get("/configuration/BaseOS") == "amazonlinux2" %}
        amazon-linux-extras install -y epel

      {% elif context.get("/configuration/BaseOS") == "amazonlinux2023"  %}
        log_info "EPEL is not supported on Amazon Linux 2023 https://docs.aws.amazon.com/linux/al2023/ug/compare-with-al2.html#epel"

      {% elif context.get("/configuration/BaseOS") == "centos7" %}
        packages_install epel-release

      {% elif context.get("/configuration/BaseOS") == "rhel7" %}
        if ! verify_package_installed epel-release; then
           log_info "EPEL rpm has been removed from official Fedora Repo as RHEL7 is EOL, fetching it from SOCA filesystem"
           packages_install "/apps/soca/{{ context.get("/configuration/ClusterId") }}/resources/eol_archives/epel/epel-release-latest-7.noarch.rpm"
        fi

      {% elif context.get("/configuration/BaseOS") in ("rhel8", "rhel9", "rocky8", "rocky9") %}

         {% if context.get("/configuration/BaseOS") in ("rhel8", "rocky8") %}
           EPEL_URL="{{ context.get("/system/epel/el8/url") }}"
         {% elif context.get("/configuration/BaseOS") in ("rhel9", "rocky9") %}
           EPEL_URL="{{ context.get("/system/epel/el9/url") }}"
         {% endif %}
        log_info "Downloading EPEL RPM from ${EPEL_URL}"
        file_download --download-url="${EPEL_URL}" --save-as="epel-installer.rpm"
        packages_install "epel-installer.rpm"

      {% else %}
          exit_fail "Unknown Base OS {{ context.get('/configuration/BaseOS') }} for EPEL"
      {% endif %}
    fi

    popd

}
install_epel
{% endif %}